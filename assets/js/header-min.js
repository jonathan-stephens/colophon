class HeaderController{constructor(){this.isNavOpen=!1,this.isTransitioning=!1,this.navToggle=document.getElementById("nav-toggle"),this.navPanel=document.getElementById("nav-panel"),this.navToggleText=document.getElementById("nav-toggle-text"),this.body=document.body,this.openIcon=null,this.closeIcon=null,this.init()}async init(){console.log("HeaderController initializing..."),console.log("Nav toggle found:",!!this.navToggle),console.log("Nav panel found:",!!this.navPanel),console.log("Nav toggle text found:",!!this.navToggleText),await this.loadIcons(),this.navPanel&&(this.navPanel.classList.add("is-collapsed"),this.navPanel.setAttribute("aria-hidden","true")),this.navToggle&&this.navToggle.addEventListener("click",(e=>{console.log("Nav toggle clicked!"),e.preventDefault(),this.toggleNav()})),document.addEventListener("keydown",(e=>{"Escape"===e.key&&this.isNavOpen&&this.closeNav()})),console.log("HeaderController initialized successfully")}async loadIcons(){try{console.log("Loading icons...");const e=await fetch("/assets/svg/icons/panel-right---to-open.svg");this.openIcon=await e.text();const n=await fetch("/assets/svg/icons/panel-right---to-close.svg");this.closeIcon=await n.text(),console.log("Icons loaded successfully")}catch(e){console.warn("Could not load navigation icons:",e);const n=this.navToggle&&this.navToggle.querySelector("svg");this.openIcon=n?n.outerHTML:"",this.closeIcon=this.openIcon}}toggleNav(){console.log("toggleNav called, current state:",this.isNavOpen),this.isTransitioning?console.log("Already transitioning, ignoring click"):this.isNavOpen?this.closeNav():this.openNav()}openNav(){console.log("Opening nav..."),this.isTransitioning||(this.isNavOpen=!0,this.isTransitioning=!0,this.body.style.overflow="hidden",this.navPanel&&(this.navPanel.classList.remove("is-collapsed"),this.navPanel.classList.add("is-opening")),this.updateNavState(),setTimeout((()=>{this.isTransitioning=!1,this.navPanel&&(this.navPanel.classList.remove("is-opening"),this.navPanel.classList.add("open"))}),300))}closeNav(){console.log("Closing nav..."),this.isNavOpen&&(this.isTransitioning||(this.isNavOpen=!1,this.isTransitioning=!0,this.body.style.overflow="",this.navPanel&&(this.navPanel.classList.remove("is-opening","open"),this.navPanel.classList.add("is-closing")),this.updateNavState(),setTimeout((()=>{this.isTransitioning=!1,this.navPanel&&(this.navPanel.classList.remove("is-closing"),this.navPanel.classList.add("is-collapsed"))}),300)))}updateNavState(){console.log("Updating nav state, isNavOpen:",this.isNavOpen),this.navPanel&&this.navPanel.setAttribute("aria-hidden",(!this.isNavOpen).toString()),this.navToggle&&(this.navToggle.setAttribute("aria-expanded",this.isNavOpen.toString()),this.navToggle.classList.toggle("is-open",this.isNavOpen)),this.navToggleText&&(this.navToggleText.textContent=this.isNavOpen?"Close Navigation":"Open Navigation"),this.updateIcon()}updateIcon(){if(console.log("Updating icon, isNavOpen:",this.isNavOpen),!this.openIcon||!this.closeIcon)return void console.log("Icons not available");const e=this.navToggle&&this.navToggle.querySelector("svg");if(!e)return void console.log("No SVG element found");const n=this.isNavOpen?this.closeIcon:this.openIcon,s=document.createElement("div");s.innerHTML=n;const t=s.querySelector("svg");t?(e.className.baseVal&&t.setAttribute("class",e.className.baseVal),e.replaceWith(t),console.log("Icon updated successfully")):console.log("Failed to create new SVG")}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>{console.log("DOM loaded, initializing HeaderController"),new HeaderController})):(console.log("DOM already loaded, initializing HeaderController"),new HeaderController);
//# sourceMappingURL=header-min.js.map