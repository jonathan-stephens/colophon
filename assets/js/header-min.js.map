{"version":3,"names":["HeaderController","constructor","this","isNavOpen","isTransitioning","navToggle","document","getElementById","navPanel","navToggleText","overlay","init","addEventListener","toggleNav","closeNav","handleTransitionEnd","e","key","contains","target","closest","classList","add","openNav","remove","updateNavState","toggle","setAttribute","toString","textContent","body","manageFocus","firstNavLink","querySelector","focus","headerExports","requireHeader","header","getDefaultExportFromCjs"],"sources":["header.js","header.js?commonjs-entry"],"sourcesContent":["class HeaderController {\n    constructor() {\n        this.isNavOpen = false;\n        this.isTransitioning = false;\n        // Get DOM elements\n        this.navToggle = document.getElementById('nav-toggle');\n        this.navPanel = document.getElementById('nav-panel');\n        this.navToggleText = document.getElementById('nav-toggle-text');\n        this.overlay = document.getElementById('overlay');\n        this.init();\n    }\n\n    init() {\n        // Check if elements exist before adding listeners\n        if (this.navToggle) {\n            this.navToggle.addEventListener('click', () => this.toggleNav());\n        }\n\n        if (this.overlay) {\n            this.overlay.addEventListener('click', () => this.closeNav());\n        }\n\n        // Listen for transition end to update classes\n        if (this.navPanel) {\n            this.navPanel.addEventListener('transitionend', () => this.handleTransitionEnd());\n        }\n\n        // Close panel on Escape key\n        document.addEventListener('keydown', (e) => {\n            if (e.key === 'Escape') {\n                this.closeNav();\n            }\n        });\n\n        // Close panel on outside click (anywhere except nav panel and header)\n        document.addEventListener('click', (e) => {\n            if (this.isNavOpen && !this.isTransitioning) {\n                // Check if click is outside nav panel and header\n                if (!this.navPanel.contains(e.target) &&\n                    !e.target.closest('.site-header')) {\n                    this.closeNav();\n                }\n            }\n        });\n\n        // Set initial collapsed state\n        this.navPanel.classList.add('is-collapsed');\n    }\n\n    toggleNav() {\n        if (this.isTransitioning) return; // Prevent multiple clicks during transition\n\n        if (this.isNavOpen) {\n            this.closeNav();\n        } else {\n            this.openNav();\n        }\n    }\n\n    openNav() {\n        if (this.isTransitioning) return;\n\n        this.isNavOpen = true;\n        this.isTransitioning = true;\n\n        // Remove collapsed class and add opening class\n        this.navPanel.classList.remove('is-collapsed');\n        this.navPanel.classList.add('is-opening');\n\n        this.updateNavState();\n    }\n\n    closeNav() {\n        if (this.isTransitioning) return;\n\n        this.isNavOpen = false;\n        this.isTransitioning = true;\n\n        // Add closing class\n        this.navPanel.classList.add('is-closing');\n\n        this.updateNavState();\n    }\n\n    handleTransitionEnd() {\n        this.isTransitioning = false;\n\n        if (this.isNavOpen) {\n            // Transition to open state complete\n            this.navPanel.classList.remove('is-opening');\n        } else {\n            // Transition to closed state complete - clean up all classes\n            this.navPanel.classList.remove('is-closing');\n            this.navPanel.classList.add('is-collapsed');\n        }\n    }\n\n    updateNavState() {\n        // Update panel classes and attributes\n        this.navPanel.classList.toggle('open', this.isNavOpen);\n        this.navPanel.setAttribute('aria-hidden', (!this.isNavOpen).toString());\n\n        // Update toggle button\n        this.navToggle.setAttribute('aria-expanded', this.isNavOpen.toString());\n        this.navToggleText.textContent = this.isNavOpen ? 'Close Navigation' : 'Open Navigation';\n\n        // Update the button icon (you'll need to handle this in CSS or swap the SVG)\n        // You could add a class to the button to change the icon via CSS\n        this.navToggle.classList.toggle('is-open', this.isNavOpen);\n\n        // Update overlay for smooth left-slide transition\n        // The overlay should fade in/out in sync with the panel slide\n        this.overlay.classList.toggle('active', this.isNavOpen);\n        this.overlay.setAttribute('aria-hidden', (!this.isNavOpen).toString());\n\n        // Add state classes to body for global styling control\n        document.body.classList.toggle('nav-open', this.isNavOpen);\n\n        this.manageFocus();\n    }\n\n    manageFocus() {\n        if (this.isNavOpen) {\n            // Focus first navigation link\n            const firstNavLink = this.navPanel.querySelector('.nav-link');\n            if (firstNavLink) {\n                firstNavLink.focus();\n            }\n        }\n    }\n}\n\n// Initialize when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    new HeaderController();\n});\n","import { getDefaultExportFromCjs } from \"\u0000commonjsHelpers.js\";\nimport { __require as requireHeader } from \"/Users/jonathan/Desktop/Github/js-us-a2/assets/js/header.js\";\nvar headerExports = requireHeader();\nexport { headerExports as __moduleExports };\nexport default /*@__PURE__*/getDefaultExportFromCjs(headerExports);"],"mappings":"8OAAA,MAAMA,EACF,WAAAC,GACIC,KAAKC,WAAY,EACjBD,KAAKE,iBAAkB,EAEvBF,KAAKG,UAAYC,SAASC,eAAe,cACzCL,KAAKM,SAAWF,SAASC,eAAe,aACxCL,KAAKO,cAAgBH,SAASC,eAAe,mBAC7CL,KAAKQ,QAAUJ,SAASC,eAAe,WACvCL,KAAKS,MACb,CAEI,IAAAA,GAEQT,KAAKG,WACLH,KAAKG,UAAUO,iBAAiB,SAAS,IAAMV,KAAKW,cAGpDX,KAAKQ,SACLR,KAAKQ,QAAQE,iBAAiB,SAAS,IAAMV,KAAKY,aAIlDZ,KAAKM,UACLN,KAAKM,SAASI,iBAAiB,iBAAiB,IAAMV,KAAKa,wBAI/DT,SAASM,iBAAiB,WAAYI,IACpB,WAAVA,EAAEC,KACFf,KAAKY,UACrB,IAIQR,SAASM,iBAAiB,SAAUI,IAC5Bd,KAAKC,YAAcD,KAAKE,kBAEnBF,KAAKM,SAASU,SAASF,EAAEG,SACzBH,EAAEG,OAAOC,QAAQ,iBAClBlB,KAAKY,WAEzB,IAIQZ,KAAKM,SAASa,UAAUC,IAAI,eACpC,CAEI,SAAAT,GACQX,KAAKE,kBAELF,KAAKC,UACLD,KAAKY,WAELZ,KAAKqB,UAEjB,CAEI,OAAAA,GACQrB,KAAKE,kBAETF,KAAKC,WAAY,EACjBD,KAAKE,iBAAkB,EAGvBF,KAAKM,SAASa,UAAUG,OAAO,gBAC/BtB,KAAKM,SAASa,UAAUC,IAAI,cAE5BpB,KAAKuB,iBACb,CAEI,QAAAX,GACQZ,KAAKE,kBAETF,KAAKC,WAAY,EACjBD,KAAKE,iBAAkB,EAGvBF,KAAKM,SAASa,UAAUC,IAAI,cAE5BpB,KAAKuB,iBACb,CAEI,mBAAAV,GACIb,KAAKE,iBAAkB,EAEnBF,KAAKC,UAELD,KAAKM,SAASa,UAAUG,OAAO,eAG/BtB,KAAKM,SAASa,UAAUG,OAAO,cAC/BtB,KAAKM,SAASa,UAAUC,IAAI,gBAExC,CAEI,cAAAG,GAEIvB,KAAKM,SAASa,UAAUK,OAAO,OAAQxB,KAAKC,WAC5CD,KAAKM,SAASmB,aAAa,gBAAiBzB,KAAKC,WAAWyB,YAG5D1B,KAAKG,UAAUsB,aAAa,gBAAiBzB,KAAKC,UAAUyB,YAC5D1B,KAAKO,cAAcoB,YAAc3B,KAAKC,UAAY,mBAAqB,kBAIvED,KAAKG,UAAUgB,UAAUK,OAAO,UAAWxB,KAAKC,WAIhDD,KAAKQ,QAAQW,UAAUK,OAAO,SAAUxB,KAAKC,WAC7CD,KAAKQ,QAAQiB,aAAa,gBAAiBzB,KAAKC,WAAWyB,YAG3DtB,SAASwB,KAAKT,UAAUK,OAAO,WAAYxB,KAAKC,WAEhDD,KAAK6B,aACb,CAEI,WAAAA,GACI,GAAI7B,KAAKC,UAAW,CAEhB,MAAM6B,EAAe9B,KAAKM,SAASyB,cAAc,aAC7CD,GACAA,EAAaE,OAE7B,CACA,E,OAIA5B,SAASM,iBAAiB,oBAAoB,KAC1C,IAAIZ,CAAkB,I,SCpI1B,IAAImC,cAAgBC,gBAEpBC,OAA4BC,wBAAwBH,sB","ignoreList":[]}