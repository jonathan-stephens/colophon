window.addEventListener("DOMContentLoaded",(()=>{console.log("✅ share.js loaded");const e=document.getElementById("website"),t=document.getElementById("tld"),a=document.getElementById("author"),o=document.getElementById("tags"),r=document.getElementById("page-title"),s=document.getElementById("text"),n=document.getElementById("bookmark-form"),i=document.getElementById("fetch-metadata-btn"),l=document.getElementById("quick-save-btn"),c=document.getElementById("message");function d(e,t="info"){c&&(c.textContent=e,c.className="message "+t,c.style.display="block",setTimeout((()=>c.style.display="none"),5e3))}async function u(e){if(e){d("Fetching metadata...","info");try{const t=await fetch("/api/bookmarks/fetch-metadata",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:e})}),s=await t.json();if("success"===s.status&&s.data){const e=s.data;e.author&&!a.value&&(a.value=e.author),e.tags&&!o.value&&(o.value=e.tags),e.title&&!r.value&&(r.value=e.title),d("Metadata fetched successfully!","success")}else d("Could not fetch metadata","info")}catch(e){d("Error fetching metadata: "+e.message,"error")}}}async function m(){const e=document.body.dataset.userEmail||null;if(e){let t=localStorage.getItem("kirby_api_password");if(!t){if(t=prompt("Enter your Kirby password for API access:"),!t)return null;localStorage.setItem("kirby_api_password",t)}return{email:e,password:t}}let t=localStorage.getItem("kirby_api_email"),a=localStorage.getItem("kirby_api_password");if(!t||!a){const e=prompt("Enter your Kirby email:"),t=prompt("Enter your Kirby password:");return e&&t?(localStorage.setItem("kirby_api_email",e),localStorage.setItem("kirby_api_password",t),{email:e,password:t}):null}return{email:t,password:a}}e?.addEventListener("blur",(()=>{const a=e.value.trim();if(!a)return;const o=function(e){try{return new URL(e).hostname.replace(/^www\./,"")}catch{return""}}(a);o&&(t.value=o)})),i?.addEventListener("click",(()=>{const t=e.value.trim();t&&u(t)})),setTimeout((()=>{e?.value?(console.log("🌐 Prefilled URL detected:",e.value),e.dispatchEvent(new Event("blur")),u(e.value)):console.log("ℹ️ No prefilled URL found.")}),300),n?.addEventListener("submit",(async i=>{i.preventDefault();const l=await m();if(!l?.password)return void d("Authentication required","error");const c={website:e.value,title:r.value,tld:t.value,author:a.value,tags:o.value,text:s.value};try{const e=await fetch("/api/bookmarks/add",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Basic "+btoa(l.email+":"+l.password)},body:JSON.stringify(c)}),t=await e.json();"success"===t.status?(d("Bookmark saved successfully!","success"),n.reset()):t.message?.includes("authentication")?(localStorage.removeItem("kirby_api_password"),d("Authentication failed. Please try again.","error")):d(t.message||"Error saving bookmark","error")}catch(e){d("Network error: "+e.message,"error")}})),l?.addEventListener("click",(async()=>{const t=await m();if(!t?.password)return void d("Authentication required","error");const a=e.value.trim(),o=r.value.trim();if(a)try{const e=await fetch("/api/bookmarks/quick-add",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Basic "+btoa(t.email+":"+t.password)},body:JSON.stringify({url:a,title:o,text:""})}),r=await e.json();"success"===r.status?(d("Quickly saved!","success"),n.reset()):r.message?.includes("authentication")?(localStorage.removeItem("kirby_api_password"),d("Authentication failed. Please try again.","error")):d(r.message||"Error saving bookmark","error")}catch(e){d("Network error: "+e.message,"error")}else d("URL is required","error")}))}));