window.addEventListener("DOMContentLoaded",(()=>{console.log("✅ share.js loaded");const e=document.getElementById("website"),t=document.getElementById("tld"),o=document.getElementById("author"),a=document.getElementById("tags"),s=document.getElementById("page-title"),r=document.getElementById("text"),n=document.getElementById("bookmark-form"),l=document.getElementById("fetch-metadata-btn"),i=document.getElementById("quick-save-btn"),c=document.getElementById("message");console.log("Element check:",{websiteInput:!!e,tldInput:!!t,authorInput:!!o,tagsInput:!!a,titleInput:!!s,textInput:!!r,form:!!n,fetchBtn:!!l,quickSaveBtn:!!i,messageDiv:!!c});const d=document.getElementById("js-test");function u(e,t="info"){c?(c.textContent=e,c.className="message "+t,c.style.display="block",setTimeout((()=>{c.style.display="none"}),5e3)):console.error("Message element not found")}async function m(e){if(e){u("Fetching metadata...","info"),console.log("📡 Fetching metadata for:",e);try{const t=await fetch("/api/bookmarks/fetch-metadata",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:e})}),r=await t.json();if(console.log("Metadata response:",r),"success"===r.status&&r.data){const e=r.data;let t=[];e.author&&o&&!o.value&&(o.value=e.author,t.push("author"),console.log("✅ Author set:",e.author)),e.tags&&a&&!a.value&&(a.value=e.tags,t.push("tags"),console.log("✅ Tags set:",e.tags)),e.title&&s&&!s.value&&(s.value=e.title,t.push("title"),console.log("✅ Title set:",e.title)),t.length>0?u(`Metadata fetched! Updated: ${t.join(", ")}`,"success"):u("Metadata fetched (no empty fields to fill)","info")}else u("Could not fetch metadata","info"),console.log("Metadata fetch returned no data")}catch(e){console.error("Metadata fetch error:",e),u("Error fetching metadata: "+e.message,"error")}}}d&&(d.textContent="✅ JavaScript loaded and working!",d.style.background="#d4edda",d.style.color="#155724"),e&&e.addEventListener("blur",(()=>{const o=e.value.trim();if(!o)return;const a=function(e){try{return new URL(e).hostname.replace(/^www\./,"")}catch(e){return console.error("Error extracting domain:",e),""}}(o);a&&t&&(t.value=a,console.log("Domain extracted:",a))})),l&&l.addEventListener("click",(()=>{console.log("Fetch metadata button clicked");const t=e?e.value.trim():"";t?m(t):u("Please enter a URL first","error")})),setTimeout((()=>{e&&e.value?(console.log("🌐 Prefilled URL detected:",e.value),e.dispatchEvent(new Event("blur")),console.log("🔄 Auto-fetching metadata for shared URL..."),m(e.value)):console.log("ℹ️ No prefilled URL found.")}),300),n&&n.addEventListener("submit",(async l=>{l.preventDefault(),console.log("Form submitted");const i=await async function(){const e=document.body.dataset.userEmail||null;if(e){let t=localStorage.getItem("kirby_api_password");if(!t){if(t=prompt("Enter your Kirby password for API access:\n(This is your panel login password)"),!t)return null;localStorage.setItem("kirby_api_password",t)}return console.log("Using stored auth for:",e),{email:e,password:t}}let t=localStorage.getItem("kirby_api_email"),o=localStorage.getItem("kirby_api_password");return t&&o?(console.log("Using stored credentials for:",t),{email:t,password:o}):(t=prompt("Enter your Kirby email:\n(Your panel login email)"),t?(o=prompt("Enter your Kirby password:\n(Your panel login password)"),o?(localStorage.setItem("kirby_api_email",t),localStorage.setItem("kirby_api_password",o),console.log("Stored new credentials for:",t),{email:t,password:o}):null):null)}();if(!i||!i.password)return void u("Authentication required","error");const c={website:e?e.value:"",title:s?s.value:"",tld:t?t.value:"",author:o?o.value:"",tags:a?a.value:"",text:r?r.value:""};console.log("Submitting bookmark:",c);try{const e=await fetch("/api/bookmarks/add",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Basic "+btoa(i.email+":"+i.password)},body:JSON.stringify(c)}),t=await e.json();console.log("Save response:",t),"success"===t.status?(u("Bookmark saved successfully!","success"),n.reset()):t.message&&t.message.includes("authentication")?(localStorage.removeItem("kirby_api_password"),u("Authentication failed. Please try again.","error")):u(t.message||"Error saving bookmark","error")}catch(e){console.error("Network error:",e),u("Network error: "+e.message,"error")}})),i&&i.addEventListener("click",(async()=>{console.log("Quick save button clicked");const t=e?e.value.trim():"",o=s?s.value.trim():"";if(t){console.log("Quick saving:",{url:t,title:o});try{const e=await fetch("/api/bookmarks/quick-add",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"same-origin",body:JSON.stringify({url:t,title:o,text:""})}),a=await e.json();console.log("Quick save response:",a),"success"===a.status?(u("Quickly saved!","success"),n.reset()):u(a.message||"Error saving bookmark","error")}catch(e){console.error("Network error:",e),u("Network error: "+e.message,"error")}}else u("URL is required","error")})),console.log("🎉 All event listeners attached successfully")}));