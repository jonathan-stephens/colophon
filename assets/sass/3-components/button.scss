/* https://piccalil.li/blog/how-i-build-a-button-component/ */

button, .button {
  --button-bg: var(--background-primary);
  --button-color: var(--color-distinct);
  --button-hover-bg: var(--background-secondary);
  --button-hover-color: var(--color-prominent);
  --button-border-width: var(--border-thin);
  --button-border-style: solid;
  --button-border-color: var(--border-color-nuance);
  --button-hover-border-color: var(--border-color-distinct);
  --button-radius: var(--radii-square);
  --button-outline-color: var(--color-prominent);
  --button-outline-style: solid;
  --button-outline-width: var(--border-thin);

  display: inline-flex;
  align-items: center;
  justify-content:center;
  gap: var(--button-gap, var(--flow-5));
  padding: var(--button-padding, var(--flow-3) var(--flow-3));

  background: var(--button-bg);

  border-width: var(--button-border-width);
  border-style: var(--button-border-style);
  border-color: var(--button-border-color);
  border-radius: var(--button-radius);

  text-decoration: none;
  font-weight: var(--button-font-weight, var(--weight-medium));
  font-size: var(--button-font-size, inherit);
  letter-spacing: 0.05ch;
  line-height: var(--leading-fine); /* Set or buttons will be different sizes (<a>/<button>) */

  cursor: pointer;
  transition: color var(--duration-faster) ease-in-out, border var(--duration-faster) ease-in-out, background var(--duration-base) ease-in-out, fill var(--duration-faster) ease-in-out, padding var(--duration-base) ease-in-out;
}

button svg, .button svg {
  height: var(--button-icon-size, 1.2cap);
  width: auto;
  flex: none;
  fill:var(--button-color);
  transition: fill var(--duration-fastest) ease-in-out;
}

/* Hover/focus/active */
button:hover, .button:hover {
  background: var(--button-hover-bg);
  color: var(--button-hover-color);
  border-color:var(--button-hover-border-color);

}

button:focus, .button:focus {
  outline-width: var(--button-outline-width, var(--button-border-width));
  outline-style: var(--button-outline-style, var(--button-border-style));
  outline-color: var(--button-outline-color, var(--button-border-color));
  outline-offset: var(
    --button-outline-offset,
    calc(var(--button-border-width) * 1)
  );
}

button:active, .button:active, .filter-radio:checked + label.button{
  transform: scale(99%);
  transform: translateY(2px);
  outline-color:var(--color-prominent);
  border-color:var(--color-prominent);
}

/* Variants */
button[data-button-variant="primary"], .button[data-button-variant="primary"] {
  --button-bg: var(--background-quaternary);
  --button-color: var(--color-prominent-inverse);
  --button-border-color: var(--background-quinary);
  --button-hover-bg: var(--button-hover-bg);
  --button-hover-color: var(--button-hover-color);
}

.button[data-button-variant="positive"] {
  --button-bg: #2d936c;
  --button-border-color: #107350;
  --button-hover-bg: #359d75;
}

.button[data-button-variant="negative"] {
  --button-bg: #b33c48;
  --button-border-color: #a62f3d;
  --button-hover-bg: #c24a56;
}

/* Ghost buttons */
.button[data-button-variant="ghost"] {
  --button-bg: transparent;
  --button-border-color: transparent;
  --button-color: currentColor;
  --button-border-style: none;
  --button-padding: var(--flow-3) 0;
  align-items: flex-start;
  font-weight:var(--weight-text);


  &:hover{
    --button-padding: var(--flow-3) var(--flow-3);
  }

}

/* Radius variants */
.button[data-button-radius="hard"] {
  --button-radius: 0;
}

button:has(.icon), .button:has(.icon){
  --button-gap:var(--rhythm-presto);
}


button:has(.icon) svg, .button:has(.icon) svg{
  fill: var(--link-color);
}
button:has(.icon), .button:has(.icon){
  &:hover svg, &:active svg, &:focus svg{
    fill:var(--button-hover-color);
  }
}
