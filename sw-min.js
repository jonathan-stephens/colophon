const CACHE_NAME="bookmarks-pwa-v5",urlsToCache=["/","/share"];self.addEventListener("install",(e=>{console.log("🔧 SW v5: INSTALLING"),e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log("✅ SW v5: Cache opened"),e.addAll(urlsToCache)))).then((()=>(console.log("⏭️ SW v5: Skip waiting"),self.skipWaiting()))).catch((e=>{console.error("❌ SW v5: Install error:",e)})))})),self.addEventListener("activate",(e=>{console.log("🚀 SW v5: ACTIVATING"),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return console.log("🗑️ SW v5: Deleting old cache:",e),caches.delete(e)}))))).then((()=>(console.log("👑 SW v5: Claiming clients"),self.clients.claim()))))})),self.addEventListener("fetch",(e=>{const{request:o}=e,t=new URL(o.url);return console.log("📡 SW v5 FETCH:",{method:o.method,url:o.url,pathname:t.pathname,origin:t.origin,destination:o.destination,mode:o.mode}),"POST"===o.method&&"/share"===t.pathname?(console.log("🎯🎯🎯 SHARE POST DETECTED! 🎯🎯🎯"),console.log("Full URL:",o.url),console.log("Headers:",[...o.headers.entries()]),e.respondWith((async()=>{try{console.log("📦 SW v5: Reading form data...");const e=o.clone(),s=await e.formData();console.log("📦 SW v5: FormData entries:");for(const[e,o]of s.entries())console.log(`  - ${e}: ${o}`);const n=s.get("url")||"",r=s.get("title")||"",a=s.get("text")||"";console.log("📦 SW v5: Extracted data:",{url:n,title:r,text:a});const l=new URLSearchParams;n&&l.set("url",n),r&&l.set("title",r),a&&l.set("text",a);const c=`${t.origin}/share?${l.toString()}`;console.log("➡️ SW v5: Redirecting to:",c),console.log("➡️ SW v5: Params string:",l.toString());const i=Response.redirect(c,303);return console.log("✅ SW v5: Redirect response created"),console.log("Response type:",i.type),console.log("Response status:",i.status),console.log("Response URL:",i.url),i}catch(e){console.error("❌ SW v5: Error in share handler:",e),console.error("Error name:",e.name),console.error("Error message:",e.message),console.error("Error stack:",e.stack);const o=`${t.origin}/share?error=processing_failed`;return console.log("⚠️ SW v5: Fallback redirect to:",o),Response.redirect(o,303)}})()),void console.log("🎯 SW v5: Share POST handler completed")):"/share"===t.pathname?(console.log("🌐 SW v5: GET /share - fetching from network"),void e.respondWith(fetch(o).then((e=>(console.log("✅ SW v5: /share network response:",e.status),e))).catch((e=>{throw console.error("❌ SW v5: /share network error:",e),e})))):t.pathname.startsWith("/api/")?(console.log("🌐 SW v5: API call - network only"),void e.respondWith(fetch(o))):void e.respondWith(fetch(o).then((e=>{if(e&&200===e.status&&"GET"===o.method&&"basic"===e.type){const t=e.clone();caches.open(CACHE_NAME).then((e=>{e.put(o,t)}))}return e})).catch((()=>caches.match(o))))})),self.addEventListener("message",(e=>{console.log("💬 SW v5: Message received:",e.data),e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting(),e.data&&"CLEAR_CACHE"===e.data.type&&caches.delete(CACHE_NAME).then((()=>{console.log("🗑️ SW v5: Cache cleared"),e.ports[0].postMessage({cleared:!0})}))})),console.log("✅ SW v5 script loaded and ready");